{"version":3,"sources":["screens/Demo.js","firebase_user.js","contexts/AuthContext.js","screens/Signup.js","firebase.js","stocks.js","indices.js","currencies.js","screens/Dashboard.js","screens/Login.js","screens/PrivateRoute.js","screens/ForgotPassword.js","screens/UpdateProfile.js","App.js","reportWebVitals.js","index.js"],"names":["Component","app","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","AuthContext","React","createContext","useAuth","useContext","AuthProvider","children","useState","currentUser","setCurrentUser","loading","setLoading","useEffect","onAuthStateChanged","user","value","login","email","password","signInWithEmailAndPassword","signup","createUserWithEmailAndPassword","logout","signOut","resetPassword","sendPasswordResetEmail","updateEmail","updatePassword","Provider","Signup","emailRef","useRef","passwordRef","passwordConfirmRef","error","setError","history","useHistory","e","a","preventDefault","current","push","classname","Card","Body","Alert","variant","Form","onSubmit","Group","id","Label","Control","type","ref","required","Button","disabled","className","to","length","databaseURL","stockList","Stocks","state","isSubscribed","stockData","dataList","database","once","snapshot","i","symbol","price","val","change","percent","setState","this","map","stock","index","Math","round","onClick","subscriptionHandler","bind","renderTableBody","indexList","Indices","indexData","currencyList","Currencies","currencyData","rate","currency","Dashboard","Login","PrivateRoute","component","rest","render","props","ForgotPassword","message","setMessage","UpdateProfile","promises","Promise","all","then","catch","finally","defaultValue","placeholder","App","Container","style","minHeight","maxWidth","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"wRAGmBA,Y,iFCAbC,G,MAAMC,IAASC,cAAc,CACjCC,OAAQ,0CACRC,WAAY,oCACZC,UAAW,oBACXC,cAAe,gCACfC,kBAAmB,cACnBC,MAAO,2CACPC,cAAe,kBAGJC,EAAOV,EAAIU,OCVlBC,EAAcC,IAAMC,gBAEnB,SAASC,IACd,OAAOC,qBAAWJ,GAGb,SAASK,EAAT,GAAqC,IAAbC,EAAY,EAAZA,SAAY,EACHC,qBADG,mBAClCC,EADkC,KACrBC,EADqB,OAEXF,oBAAS,GAFE,mBAElCG,EAFkC,KAEzBC,EAFyB,KA4BzCC,qBAAU,WAMR,OALoBb,EAAKc,oBAAmB,SAACC,GAC3CL,EAAeK,GACfH,GAAW,QAIZ,IAEH,IAAMI,EAAQ,CACZP,cACAQ,MA/BF,SAAeC,EAAOC,GACpB,OAAOnB,EAAKoB,2BAA2BF,EAAOC,IA+B9CE,OApCF,SAAgBH,EAAOC,GACrB,OAAOnB,EAAKsB,+BAA+BJ,EAAOC,IAoClDI,OA7BF,WACE,OAAOvB,EAAKwB,WA6BZC,cA1BF,SAAuBP,GACrB,OAAOlB,EAAK0B,uBAAuBR,IA0BnCS,YAvBF,SAAqBT,GACnB,OAAOT,EAAYkB,YAAYT,IAuB/BU,eApBF,SAAwBT,GACtB,OAAOV,EAAYmB,eAAeT,KAsBpC,OACE,cAAClB,EAAY4B,SAAb,CAAsBb,MAAOA,EAA7B,UACIL,GAAWJ,I,mBCrDJ,SAASuB,IACtB,IAAMC,EAAWC,mBACXC,EAAcD,mBACdE,EAAqBF,mBACnBX,EAAWjB,IAAXiB,OAJuB,EAKLb,mBAAS,IALJ,mBAKxB2B,EALwB,KAKjBC,EALiB,OAMD5B,oBAAS,GANR,mBAMxBG,EANwB,KAMfC,EANe,KAOzByB,EAAUC,cAPe,4CAS/B,WAA4BC,GAA5B,SAAAC,EAAA,yDACED,EAAEE,iBAEER,EAAYS,QAAQ1B,QAAUkB,EAAmBQ,QAAQ1B,MAH/D,yCAIWoB,EAAS,2BAJpB,uBAQIA,EAAS,IACTxB,GAAW,GATf,SAUUS,EAAOU,EAASW,QAAQ1B,MAAOiB,EAAYS,QAAQ1B,OAV7D,OAWIqB,EAAQM,KAAK,KAXjB,kDAaIP,EAAS,+BAbb,QAgBExB,GAAW,GAhBb,2DAT+B,sBA4B/B,OACE,qCACE,oBAAIgC,UAAU,mBAAd,2BACA,oBAAIA,UAAU,mBAAd,gDACA,cAACC,EAAA,EAAD,UACE,eAACA,EAAA,EAAKC,KAAN,WACE,oBAAIF,UAAU,mBAAd,qBACCT,GAAS,cAACY,EAAA,EAAD,CAAOC,QAAQ,SAAf,SAAyBb,IACnC,eAACc,EAAA,EAAD,CAAMC,SApCiB,4CAoCvB,UACE,eAACD,EAAA,EAAKE,MAAN,CAAYC,GAAG,QAAf,UACE,cAACH,EAAA,EAAKI,MAAN,oBACA,cAACJ,EAAA,EAAKK,QAAN,CAAcC,KAAK,QAAQC,IAAKzB,EAAU0B,UAAQ,OAEpD,eAACR,EAAA,EAAKE,MAAN,CAAYC,GAAG,WAAf,UACE,cAACH,EAAA,EAAKI,MAAN,uBACA,cAACJ,EAAA,EAAKK,QAAN,CAAcC,KAAK,WAAWC,IAAKvB,EAAawB,UAAQ,OAE1D,eAACR,EAAA,EAAKE,MAAN,CAAYC,GAAG,mBAAf,UACE,cAACH,EAAA,EAAKI,MAAN,+BACA,cAACJ,EAAA,EAAKK,QAAN,CAAcC,KAAK,WAAWC,IAAKtB,EAAoBuB,UAAQ,OAEjE,cAACC,EAAA,EAAD,CAAQC,SAAUhD,EAASiD,UAAU,QAAQL,KAAK,SAAlD,6BAMN,sBAAKX,UAAU,yBAAf,sCAC2B,cAAC,IAAD,CAAMiB,GAAG,UAAT,0B,4BChDlB,EAACtE,OAAcuE,OAE1BvE,QADAA,gBAZiB,CACnBE,OAAQ,0CACRC,WAAY,oCACZqE,YAAa,wDACbpE,UAAW,oBACXC,cAAe,gCACfC,kBAAmB,cACnBC,MAAO,2CACPC,cAAe,iBCNXiE,G,MAAY,CAChB,OACA,OACA,KACA,QACA,MACA,OACA,OACA,SAsEaC,E,4MAlEbC,MAAQ,CACNC,cAAc,EACdC,UAAW,I,uDAGb,WAAqB,IAAD,OACdC,EAAW,GACA9E,EAAS+E,WAAWd,IAAI,cAC9Be,KAAK,SAAS,SAACC,GACtB,IAAK,IAAIC,EAAI,EAAGA,EAAIT,EAAUF,OAAQW,IACpCJ,EAAS1B,KAAK,CACZ+B,OAAQV,EAAUS,GAClBE,MAAOH,EAASI,MAAMZ,EAAUS,IAAIE,MACpCE,OAAQL,EAASI,MAAMZ,EAAUS,IAAII,OACrCC,QAASN,EAASI,MAAMZ,EAAUS,IAAI,oBAG1C,EAAKM,SAAS,CACZX,UAAWC,S,6BAKjB,WACE,OAAOW,KAAKd,MAAME,UAAUa,KAAI,SAACC,EAAOC,GAAW,IACzCT,EAAmCQ,EAAnCR,OAAQC,EAA2BO,EAA3BP,MAAOE,EAAoBK,EAApBL,OAAQC,EAAYI,EAAZJ,QAC/B,OACE,+BACE,6BAAKJ,IACL,6BAAKU,KAAKC,MAAc,IAARV,GAAgB,MAChC,6BAAKS,KAAKC,MAAe,IAATR,GAAiB,MACjC,6BAAKO,KAAKC,MAAgB,IAAVP,GAAkB,c,iCAM1C,WACEE,KAAKD,SAAS,CAAEZ,cAAea,KAAKd,MAAMC,iB,oBAG5C,WACE,OAAOa,KAAKd,MAAME,YAAc,KAAkC,IAA5BY,KAAKd,MAAMC,aAC/C,8BACE,wBAAQmB,QAASN,KAAKO,oBAAoBC,KAAKR,MAA/C,yBAGF,gCACE,kCACE,gCACE,+BACE,wCACA,uCACA,wCACA,+CAGJ,gCAAQA,KAAKS,uBAEf,wBAAQH,QAASN,KAAKO,oBAAoBC,KAAKR,MAA/C,gC,GA5Da3F,aCXfqG,EAAY,CAAC,MAAO,MAAO,MAAO,OAAQ,OAAQ,MAAO,MAAO,OAqEvDC,E,4MAlEbzB,MAAQ,CACNC,cAAc,EACdyB,UAAW,I,uDAGb,WAAqB,IAAD,OACdvB,EAAW,GACA9E,EAAS+E,WAAWd,IAAI,cAC9Be,KAAK,SAAS,SAACC,GACtB,IAAK,IAAIC,EAAI,EAAGA,EAAIiB,EAAU5B,OAAQW,IACpCJ,EAAS1B,KAAK,CACZ+B,OAAQgB,EAAUjB,GAClBE,MAAOH,EAASI,MAAMc,EAAUjB,IAAIE,MACpCE,OAAQL,EAASI,MAAMc,EAAUjB,IAAII,OACrCC,QAASN,EAASI,MAAMc,EAAUjB,IAAI,oBAG1C,EAAKM,SAAS,CACZa,UAAWvB,S,6BAKjB,WACE,OAAOW,KAAKd,MAAM0B,UAAUX,KAAI,SAACE,EAAOV,GAAO,IACrCC,EAAmCS,EAAnCT,OAAQC,EAA2BQ,EAA3BR,MAAOE,EAAoBM,EAApBN,OAAQC,EAAYK,EAAZL,QAC/B,OACE,+BACE,6BAAKJ,IACL,6BAAKU,KAAKC,MAAc,IAARV,GAAgB,MAChC,6BAAKS,KAAKC,MAAe,IAATR,GAAiB,MACjC,6BAAKO,KAAKC,MAAgB,IAAVP,GAAkB,c,iCAM1C,WACEE,KAAKD,SAAS,CAAEZ,cAAea,KAAKd,MAAMC,iB,oBAG5C,WACE,OAAOa,KAAKd,MAAM0B,YAAc,KAAkC,IAA5BZ,KAAKd,MAAMC,aAC/C,8BACE,wBAAQmB,QAASN,KAAKO,oBAAoBC,KAAKR,MAA/C,yBAGF,gCACE,kCACE,gCACE,+BACE,wCACA,uCACA,wCACA,+CAGJ,gCAAQA,KAAKS,uBAEf,wBAAQH,QAASN,KAAKO,oBAAoBC,KAAKR,MAA/C,gC,GA5Dc3F,aCFhBwG,EAAe,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OAgExDC,E,4MA7Db5B,MAAQ,CACNC,cAAc,EACd4B,aAAc,I,uDAGhB,WAAqB,IAAD,OACd1B,EAAW,GACG9E,EAAS+E,WAAWd,IAAI,iBAC9Be,KAAK,SAAS,SAACC,GACzB,IAAK,IAAIC,EAAI,EAAGA,EAAIoB,EAAa/B,OAAQW,IACvCJ,EAAS1B,KAAK,CACZ+B,OAAQmB,EAAapB,GACrBuB,KAAMxB,EAASI,MAAMiB,EAAapB,IAAIuB,OAG1C,EAAKjB,SAAS,CACZgB,aAAc1B,S,6BAKpB,WACE,OAAOW,KAAKd,MAAM6B,aAAad,KAAI,SAACgB,EAAUd,GAAW,IAC/CT,EAAiBuB,EAAjBvB,OAAQsB,EAASC,EAATD,KAChB,OACE,+BACE,6BAAKtB,IACL,6BAAKU,KAAKC,MAAa,IAAPW,GAAe,c,iCAMvC,WACEhB,KAAKD,SAAS,CAAEZ,cAAea,KAAKd,MAAMC,iB,oBAG5C,WACE,OAAOa,KAAKd,MAAM6B,eAAiB,KACL,IAA5Bf,KAAKd,MAAMC,aACX,8BACE,wBAAQmB,QAASN,KAAKO,oBAAoBC,KAAKR,MAA/C,yBAGF,gCACE,kCACE,gCACE,+BACE,wCACA,2CAGJ,gCAAQA,KAAKS,uBAEf,wBAAQH,QAASN,KAAKO,oBAAoBC,KAAKR,MAA/C,gC,GAvDiB3F,aCIV,SAAS6G,IAAa,IAAD,EACR1F,mBAAS,IADD,mBAC3B2B,EAD2B,KACpBC,EADoB,OAEFhC,IAAxBK,EAF0B,EAE1BA,YAAac,EAFa,EAEbA,OACfc,EAAUC,cAHkB,4CAKlC,sBAAAE,EAAA,6DACEJ,EAAS,IADX,kBAIUb,IAJV,OAKIc,EAAQM,KAAK,UALjB,gDAOIP,EAAS,qBAPb,0DALkC,sBAgBlC,OACE,qCACE,oBAAIQ,UAAU,mBAAd,2BACA,oBAAIA,UAAU,mBAAd,gDACA,cAACC,EAAA,EAAD,UACE,eAACA,EAAA,EAAKC,KAAN,WACE,oBAAIc,UAAU,mBAAd,qBACCzB,GAAS,cAACY,EAAA,EAAD,CAAOC,QAAQ,SAAf,SAAyBb,IACnC,4CAHF,IAG2B1B,EAAYS,MACrC,cAAC,IAAD,CAAM2C,GAAG,kBAAkBD,UAAU,6BAArC,iCAKJ,qBAAKA,UAAU,yBAAf,SACE,cAACF,EAAA,EAAD,CAAQV,QAAQ,OAAOsC,QA/BK,2CA+B5B,uBAKF,sBAAK1B,UAAU,YAAf,UACE,sBAAKR,GAAG,QAAR,UACE,+CACA,cAAC,EAAD,OAEF,sBAAKA,GAAG,QAAR,UACE,+CACA,cAAC,EAAD,OAEF,sBAAKA,GAAG,WAAR,UACE,kDACA,cAAC,EAAD,aCpDK,SAAS+C,IACtB,IAAMpE,EAAWC,mBACXC,EAAcD,mBACZf,EAAUb,IAAVa,MAHsB,EAIJT,mBAAS,IAJL,mBAIvB2B,EAJuB,KAIhBC,EAJgB,OAKA5B,oBAAS,GALT,mBAKvBG,EALuB,KAKdC,EALc,KAMxByB,EAAUC,cANc,4CAQ9B,WAA4BC,GAA5B,SAAAC,EAAA,6DACED,EAAEE,iBADJ,SAIIL,EAAS,IACTxB,GAAW,GALf,SAMUK,EAAMc,EAASW,QAAQ1B,MAAOiB,EAAYS,QAAQ1B,OAN5D,OAOIqB,EAAQM,KAAK,KAPjB,gDASIP,EAAS,oBATb,QAYExB,GAAW,GAZb,0DAR8B,sBAuB9B,OACE,qCACE,oBAAIgC,UAAU,mBAAd,2BACA,oBAAIA,UAAU,mBAAd,gDACA,cAACC,EAAA,EAAD,UACE,eAACA,EAAA,EAAKC,KAAN,WACE,oBAAIc,UAAU,mBAAd,oBACCzB,GAAS,cAACY,EAAA,EAAD,CAAOC,QAAQ,SAAf,SAAyBb,IACnC,eAACc,EAAA,EAAD,CAAMC,SA/BgB,4CA+BtB,UACE,eAACD,EAAA,EAAKE,MAAN,CAAYC,GAAG,QAAf,UACE,cAACH,EAAA,EAAKI,MAAN,oBACA,cAACJ,EAAA,EAAKK,QAAN,CAAcC,KAAK,QAAQC,IAAKzB,EAAU0B,UAAQ,OAEpD,eAACR,EAAA,EAAKE,MAAN,CAAYC,GAAG,WAAf,UACE,cAACH,EAAA,EAAKI,MAAN,uBACA,cAACJ,EAAA,EAAKK,QAAN,CAAcC,KAAK,WAAWC,IAAKvB,EAAawB,UAAQ,OAE1D,cAACC,EAAA,EAAD,CAAQC,SAAUhD,EAASiD,UAAU,QAAQL,KAAK,SAAlD,uBAIF,qBAAKK,UAAU,yBAAf,SACE,cAAC,IAAD,CAAMC,GAAG,mBAAT,qCAIN,sBAAKD,UAAU,yBAAf,8BACmB,cAAC,IAAD,CAAMC,GAAG,UAAT,2B,oBCnDV,SAASuC,EAAT,GAA0D,IAAvB/G,EAAsB,EAAjCgH,UAAyBC,EAAQ,6BAC9D7F,EAAgBL,IAAhBK,YAER,OACE,cAAC,IAAD,2BACM6F,GADN,IAEEC,OAAQ,SAACC,GACP,OAAO/F,EACL,cAACpB,EAAD,eAAemH,IAEf,cAAC,IAAD,CAAU3C,GAAG,eCTR,SAAS4C,IACtB,IAAM1E,EAAWC,mBACTP,EAAkBrB,IAAlBqB,cAF+B,EAGbjB,mBAAS,IAHI,mBAGhC2B,EAHgC,KAGzBC,EAHyB,OAIT5B,mBAAS,IAJA,mBAIhCkG,EAJgC,KAIvBC,EAJuB,OAKTnG,oBAAS,GALA,mBAKhCG,EALgC,KAKvBC,EALuB,iDAOvC,WAA4B2B,GAA5B,SAAAC,EAAA,6DACED,EAAEE,iBADJ,SAIIkE,EAAW,IACXvE,EAAS,IACTxB,GAAW,GANf,SAOUa,EAAcM,EAASW,QAAQ1B,OAPzC,OAQI2F,EAAW,6CARf,kDAUIvE,EAAS,4BAVb,QAaExB,GAAW,GAbb,2DAPuC,sBAuBvC,OACE,qCACE,cAACiC,EAAA,EAAD,UACE,eAACA,EAAA,EAAKC,KAAN,WACE,oBAAIc,UAAU,mBAAd,4BACCzB,GAAS,cAACY,EAAA,EAAD,CAAOC,QAAQ,SAAf,SAAyBb,IAClCuE,GAAW,cAAC3D,EAAA,EAAD,CAAOC,QAAQ,UAAf,SAA0B0D,IACtC,eAACzD,EAAA,EAAD,CAAMC,SA9ByB,4CA8B/B,UACE,eAACD,EAAA,EAAKE,MAAN,CAAYC,GAAG,QAAf,UACE,cAACH,EAAA,EAAKI,MAAN,oBACA,cAACJ,EAAA,EAAKK,QAAN,CAAcC,KAAK,QAAQC,IAAKzB,EAAU0B,UAAQ,OAEpD,cAACC,EAAA,EAAD,CAAQC,SAAUhD,EAASiD,UAAU,QAAQL,KAAK,SAAlD,+BAIF,qBAAKK,UAAU,yBAAf,SACE,cAAC,IAAD,CAAMC,GAAG,SAAT,0BAIN,sBAAKD,UAAU,yBAAf,8BACmB,cAAC,IAAD,CAAMC,GAAG,UAAT,2BC7CV,SAAS+C,IACtB,IAAM7E,EAAWC,mBACXC,EAAcD,mBACdE,EAAqBF,mBAHW,EAIe5B,IAA7CK,EAJ8B,EAI9BA,YAAamB,EAJiB,EAIjBA,eAAgBD,EAJC,EAIDA,YAJC,EAKZnB,mBAAS,IALG,mBAK/B2B,EAL+B,KAKxBC,EALwB,OAMR5B,oBAAS,GAND,mBAM/BG,EAN+B,KAMtBC,EANsB,KAOhCyB,EAAUC,cA+BhB,OACE,qCACE,cAACO,EAAA,EAAD,UACE,eAACA,EAAA,EAAKC,KAAN,WACE,oBAAIc,UAAU,mBAAd,4BACCzB,GAAS,cAACY,EAAA,EAAD,CAAOC,QAAQ,SAAf,SAAyBb,IACnC,eAACc,EAAA,EAAD,CAAMC,SAnCd,SAAsBX,GAEpB,GADAA,EAAEE,iBACER,EAAYS,QAAQ1B,QAAUkB,EAAmBQ,QAAQ1B,MAC3D,OAAOoB,EAAS,0BAGlB,IAAMyE,EAAW,GACjBjG,GAAW,GACXwB,EAAS,IAELL,EAASW,QAAQ1B,QAAUP,EAAYS,OACzC2F,EAASlE,KAAKhB,EAAYI,EAASW,QAAQ1B,QAEzCiB,EAAYS,QAAQ1B,OACtB6F,EAASlE,KAAKf,EAAeK,EAAYS,QAAQ1B,QAGnD8F,QAAQC,IAAIF,GACTG,MAAK,WACJ3E,EAAQM,KAAK,QAEdsE,OAAM,WACL7E,EAAS,+BAEV8E,SAAQ,WACPtG,GAAW,OAUT,UACE,eAACqC,EAAA,EAAKE,MAAN,CAAYC,GAAG,QAAf,UACE,cAACH,EAAA,EAAKI,MAAN,oBACA,cAACJ,EAAA,EAAKK,QAAN,CACEC,KAAK,QACLC,IAAKzB,EACL0B,UAAQ,EACR0D,aAAc1G,EAAYS,WAG9B,eAAC+B,EAAA,EAAKE,MAAN,CAAYC,GAAG,WAAf,UACE,cAACH,EAAA,EAAKI,MAAN,uBACA,cAACJ,EAAA,EAAKK,QAAN,CACEC,KAAK,WACLC,IAAKvB,EACLmF,YAAY,oCAGhB,eAACnE,EAAA,EAAKE,MAAN,CAAYC,GAAG,mBAAf,UACE,cAACH,EAAA,EAAKI,MAAN,oCACA,cAACJ,EAAA,EAAKK,QAAN,CACEC,KAAK,WACLC,IAAKtB,EACLkF,YAAY,oCAGhB,cAAC1D,EAAA,EAAD,CAAQC,SAAUhD,EAASiD,UAAU,QAAQL,KAAK,SAAlD,4BAMN,qBAAKK,UAAU,yBAAf,SACE,cAAC,IAAD,CAAMC,GAAG,IAAT,yBC/COwD,MAvBf,WACE,OACE,cAACC,EAAA,EAAD,CACE1D,UAAU,mDACV2D,MAAO,CAAEC,UAAW,SAFtB,SAIE,qBAAK5D,UAAU,QAAQ2D,MAAO,CAAEE,SAAU,SAA1C,SACE,cAAC,IAAD,UACE,cAACnH,EAAD,UACE,eAAC,IAAD,WACE,cAAC8F,EAAD,CAAcsB,OAAK,EAACC,KAAK,IAAItB,UAAWH,IACxC,cAACE,EAAD,CAAcuB,KAAK,kBAAkBtB,UAAWO,IAChD,cAAC,IAAD,CAAOe,KAAK,UAAUtB,UAAWvE,IACjC,cAAC,IAAD,CAAO6F,KAAK,SAAStB,UAAWF,IAChC,cAAC,IAAD,CAAOwB,KAAK,mBAAmBtB,UAAWI,gBCdzCmB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBd,MAAK,YAAkD,IAA/Ce,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCDdO,IAAS7B,OACP,cAAC,IAAM8B,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BX,M","file":"static/js/main.e33731a7.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport Plot from \"react-plotly.js\";\n\nclass Demo extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      stock: null,\n      timeValues: [],\n      priceValues: [],\n    };\n  }\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    var stock = this.state;\n    const pointerToThis = this;\n    let times = [];\n    let prices = [];\n    stock = stock[\"stock\"];\n\n    fetch(\n      `https://www.alphavantage.co/query?function=TIME_SERIES_INTRADAY&symbol=${stock}&interval=5min&apikey=SOQQL2085F9JMWSF`\n    )\n      .then(function (response) {\n        return response.json();\n      })\n      .then(function (data) {\n        console.log(data);\n        for (var key in data[\"Time Series (5min)\"]) {\n          times.push(key);\n          prices.push(data[\"Time Series (5min)\"][key][\"1. open\"]);\n        }\n\n        pointerToThis.setState({\n          timeValues: times,\n          priceValues: prices,\n        });\n      });\n  };\n\n  handleInputChange = (event) => {\n    event.preventDefault();\n    this.setState({\n      [event.target.name]: event.target.value,\n    });\n  };\n\n  render() {\n    const { stock } = this.state;\n    var { isLoaded, items } = this.state;\n    return (\n      <div>\n        <h1>BREADCRUMBS</h1>\n        <p>Enter the stock symbol you want to recieve information for:</p>\n        <form onSubmit={this.handleSubmit}>\n          <input\n            type=\"text\"\n            placeholder=\"TSLA\"\n            name=\"stock\"\n            onChange={this.handleInputChange}\n          />\n          <button> Enter </button>\n        </form>\n\n        <Plot\n          data={[\n            {\n              x: this.state.timeValues,\n              y: this.state.priceValues,\n              type: \"scatter\",\n              mode: \"lines+markers\",\n              marker: { color: \"red\" },\n            },\n          ]}\n          layout={{ width: 720, height: 440, title: stock }}\n        />\n      </div>\n    );\n  }\n}\n\nexport default Demo;\n","import firebase from \"firebase/app\";\nimport \"firebase/auth\";\n\nconst app = firebase.initializeApp({\n  apiKey: \"AIzaSyDCXBzTLS82Gqxp2x_-ldlNm6VQcaVBBvg\",\n  authDomain: \"breadcrumbs-c382c.firebaseapp.com\",\n  projectId: \"breadcrumbs-c382c\",\n  storageBucket: \"breadcrumbs-c382c.appspot.com\",\n  messagingSenderId: \"32315761056\",\n  appId: \"1:32315761056:web:f04ef52ad7bf820a6604c5\",\n  measurementId: \"G-452NV98MGL\",\n});\n\nexport const auth = app.auth();\nexport default app;\n","import React, { useContext, useState, useEffect } from \"react\";\nimport { auth } from \"../firebase_user\";\n\nconst AuthContext = React.createContext();\n\nexport function useAuth() {\n  return useContext(AuthContext);\n}\n\nexport function AuthProvider({ children }) {\n  const [currentUser, setCurrentUser] = useState();\n  const [loading, setLoading] = useState(true);\n\n  function signup(email, password) {\n    return auth.createUserWithEmailAndPassword(email, password);\n  }\n\n  function login(email, password) {\n    return auth.signInWithEmailAndPassword(email, password);\n  }\n\n  function logout() {\n    return auth.signOut();\n  }\n\n  function resetPassword(email) {\n    return auth.sendPasswordResetEmail(email);\n  }\n\n  function updateEmail(email) {\n    return currentUser.updateEmail(email);\n  }\n\n  function updatePassword(password) {\n    return currentUser.updatePassword(password);\n  }\n\n  useEffect(() => {\n    const unsubscribe = auth.onAuthStateChanged((user) => {\n      setCurrentUser(user);\n      setLoading(false);\n    });\n\n    return unsubscribe;\n  }, []);\n\n  const value = {\n    currentUser,\n    login,\n    signup,\n    logout,\n    resetPassword,\n    updateEmail,\n    updatePassword,\n  };\n\n  return (\n    <AuthContext.Provider value={value}>\n      {!loading && children}\n    </AuthContext.Provider>\n  );\n}\n","import React, { useRef, useState } from \"react\";\nimport { Form, Button, Card, Alert } from \"react-bootstrap\";\nimport { useAuth } from \"../contexts/AuthContext\";\nimport { Link, useHistory } from \"react-router-dom\";\n\nexport default function Signup() {\n  const emailRef = useRef();\n  const passwordRef = useRef();\n  const passwordConfirmRef = useRef();\n  const { signup } = useAuth();\n  const [error, setError] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const history = useHistory();\n\n  async function handleSubmit(e) {\n    e.preventDefault();\n\n    if (passwordRef.current.value !== passwordConfirmRef.current.value) {\n      return setError(\"Passwords do not match\");\n    }\n\n    try {\n      setError(\"\");\n      setLoading(true);\n      await signup(emailRef.current.value, passwordRef.current.value);\n      history.push(\"/\");\n    } catch {\n      setError(\"Failed to create an account\");\n    }\n\n    setLoading(false);\n  }\n\n  return (\n    <>\n      <h1 classname=\"text-center mb-4\"> BREADCRUMBS </h1>\n      <h6 classname=\"text-center mb-4\"> Stock, Index, & Currency tracker </h6>\n      <Card>\n        <Card.Body>\n          <h2 classname=\"text-center mb-4\">Sign up</h2>\n          {error && <Alert variant=\"danger\">{error}</Alert>}\n          <Form onSubmit={handleSubmit}>\n            <Form.Group id=\"email\">\n              <Form.Label>Email</Form.Label>\n              <Form.Control type=\"email\" ref={emailRef} required />\n            </Form.Group>\n            <Form.Group id=\"password\">\n              <Form.Label>Password</Form.Label>\n              <Form.Control type=\"password\" ref={passwordRef} required />\n            </Form.Group>\n            <Form.Group id=\"password-confirm\">\n              <Form.Label>Confirm Password</Form.Label>\n              <Form.Control type=\"password\" ref={passwordConfirmRef} required />\n            </Form.Group>\n            <Button disabled={loading} className=\"w-100\" type=\"submit\">\n              Sign Up\n            </Button>\n          </Form>\n        </Card.Body>\n      </Card>\n      <div classname=\"w-100 text center mt-2\">\n        Already have an account? <Link to=\"./login\">Log in</Link>\n      </div>\n    </>\n  );\n}\n","import * as firebase from \"firebase\";\n\nvar firebaseConfig = {\n  apiKey: \"AIzaSyDCXBzTLS82Gqxp2x_-ldlNm6VQcaVBBvg\",\n  authDomain: \"breadcrumbs-c382c.firebaseapp.com\",\n  databaseURL: \"https://breadcrumbs-c382c-default-rtdb.firebaseio.com\",\n  projectId: \"breadcrumbs-c382c\",\n  storageBucket: \"breadcrumbs-c382c.appspot.com\",\n  messagingSenderId: \"32315761056\",\n  appId: \"1:32315761056:web:f04ef52ad7bf820a6604c5\",\n  measurementId: \"G-452NV98MGL\",\n};\n\nexport default !firebase.apps.length\n  ? firebase.initializeApp(firebaseConfig)\n  : firebase.app();\n","import React, { Component } from \"react\";\nimport firebase from \"./firebase\";\nimport \"./tables.css\";\n\nconst stockList = [\n  \"AAPL\",\n  \"AMZN\",\n  \"FB\",\n  \"GOOGL\",\n  \"IBM\",\n  \"NFLX\",\n  \"SPOT\",\n  \"TSLA\",\n];\n\nclass Stocks extends Component {\n  state = {\n    isSubscribed: true,\n    stockData: [],\n  };\n\n  componentDidMount() {\n    var dataList = [];\n    var stockRef = firebase.database().ref(\"stock-data\");\n    stockRef.once(\"value\", (snapshot) => {\n      for (let i = 0; i < stockList.length; i++) {\n        dataList.push({\n          symbol: stockList[i],\n          price: snapshot.val()[stockList[i]].price,\n          change: snapshot.val()[stockList[i]].change,\n          percent: snapshot.val()[stockList[i]][\"percent-change\"],\n        });\n      }\n      this.setState({\n        stockData: dataList,\n      });\n    });\n  }\n\n  renderTableBody() {\n    return this.state.stockData.map((stock, index) => {\n      const { symbol, price, change, percent } = stock;\n      return (\n        <tr>\n          <td>{symbol}</td>\n          <td>{Math.round(price * 1000) / 1000}</td>\n          <td>{Math.round(change * 1000) / 1000}</td>\n          <td>{Math.round(percent * 1000) / 1000}</td>\n        </tr>\n      );\n    });\n  }\n\n  subscriptionHandler() {\n    this.setState({ isSubscribed: !this.state.isSubscribed });\n  }\n\n  render() {\n    return this.state.stockData === [] || this.state.isSubscribed === false ? (\n      <div>\n        <button onClick={this.subscriptionHandler.bind(this)}>subscribe</button>\n      </div>\n    ) : (\n      <div>\n        <table>\n          <thead>\n            <tr>\n              <th>Symbol</th>\n              <th>Price</th>\n              <th>Change</th>\n              <th>% Change</th>\n            </tr>\n          </thead>\n          <tbody>{this.renderTableBody()}</tbody>\n        </table>\n        <button onClick={this.subscriptionHandler.bind(this)}>\n          unsubscribe\n        </button>\n      </div>\n    );\n  }\n}\nexport default Stocks;\n","import React, { Component } from \"react\";\nimport firebase from \"./firebase\";\nimport \"./tables.css\";\n\nconst indexList = [\"DJI\", \"DJT\", \"DOW\", \"GSPC\", \"IXIC\", \"NDX\", \"SOX\", \"SPX\"];\n\nclass Indices extends Component {\n  state = {\n    isSubscribed: true,\n    indexData: [],\n  };\n\n  componentDidMount() {\n    var dataList = [];\n    var indexRef = firebase.database().ref(\"index-data\");\n    indexRef.once(\"value\", (snapshot) => {\n      for (let i = 0; i < indexList.length; i++) {\n        dataList.push({\n          symbol: indexList[i],\n          price: snapshot.val()[indexList[i]].price,\n          change: snapshot.val()[indexList[i]].change,\n          percent: snapshot.val()[indexList[i]][\"percent-change\"],\n        });\n      }\n      this.setState({\n        indexData: dataList,\n      });\n    });\n  }\n\n  renderTableBody() {\n    return this.state.indexData.map((index, i) => {\n      const { symbol, price, change, percent } = index;\n      return (\n        <tr>\n          <td>{symbol}</td>\n          <td>{Math.round(price * 1000) / 1000}</td>\n          <td>{Math.round(change * 1000) / 1000}</td>\n          <td>{Math.round(percent * 1000) / 1000}</td>\n        </tr>\n      );\n    });\n  }\n\n  subscriptionHandler() {\n    this.setState({ isSubscribed: !this.state.isSubscribed });\n  }\n\n  render() {\n    return this.state.indexData === [] || this.state.isSubscribed === false ? (\n      <div>\n        <button onClick={this.subscriptionHandler.bind(this)}>subscribe</button>\n      </div>\n    ) : (\n      <div>\n        <table>\n          <thead>\n            <tr>\n              <th>Symbol</th>\n              <th>Price</th>\n              <th>Change</th>\n              <th>% Change</th>\n            </tr>\n          </thead>\n          <tbody>{this.renderTableBody()}</tbody>\n        </table>\n        <button onClick={this.subscriptionHandler.bind(this)}>\n          unsubscribe\n        </button>\n      </div>\n    );\n  }\n}\nexport default Indices;\n","import React, { Component } from \"react\";\nimport firebase from \"./firebase\";\nimport \"./tables.css\";\n\nconst currencyList = [\"AUD\", \"CNY\", \"EUR\", \"GBP\", \"INR\", \"JPY\", \"MXN\", \"USD\"];\n\nclass Currencies extends Component {\n  state = {\n    isSubscribed: true,\n    currencyData: [],\n  };\n\n  componentDidMount() {\n    var dataList = [];\n    var currencyRef = firebase.database().ref(\"currency-data\");\n    currencyRef.once(\"value\", (snapshot) => {\n      for (let i = 0; i < currencyList.length; i++) {\n        dataList.push({\n          symbol: currencyList[i],\n          rate: snapshot.val()[currencyList[i]].rate,\n        });\n      }\n      this.setState({\n        currencyData: dataList,\n      });\n    });\n  }\n\n  renderTableBody() {\n    return this.state.currencyData.map((currency, index) => {\n      const { symbol, rate } = currency;\n      return (\n        <tr>\n          <td>{symbol}</td>\n          <td>{Math.round(rate * 1000) / 1000}</td>\n        </tr>\n      );\n    });\n  }\n\n  subscriptionHandler() {\n    this.setState({ isSubscribed: !this.state.isSubscribed });\n  }\n\n  render() {\n    return this.state.currencyData === [] ||\n      this.state.isSubscribed === false ? (\n      <div>\n        <button onClick={this.subscriptionHandler.bind(this)}>subscribe</button>\n      </div>\n    ) : (\n      <div>\n        <table>\n          <thead>\n            <tr>\n              <th>Symbol</th>\n              <th>Rate</th>\n            </tr>\n          </thead>\n          <tbody>{this.renderTableBody()}</tbody>\n        </table>\n        <button onClick={this.subscriptionHandler.bind(this)}>\n          unsubscribe\n        </button>\n      </div>\n    );\n  }\n}\nexport default Currencies;\n","import React, { useState } from \"react\";\nimport { Card, Button, Alert } from \"react-bootstrap\";\nimport { useAuth } from \"../contexts/AuthContext\";\nimport { Link, useHistory } from \"react-router-dom\";\n\nimport \"./Dashboard.css\";\nimport Stocks from \"./../stocks\";\nimport Indices from \"./../indices\";\nimport Currencies from \"./../currencies\";\n\nexport default function Dashboard() {\n  const [error, setError] = useState(\"\");\n  const { currentUser, logout } = useAuth();\n  const history = useHistory();\n\n  async function handleLogout() {\n    setError(\"\");\n\n    try {\n      await logout();\n      history.push(\"/login\");\n    } catch {\n      setError(\"Failed to log out\");\n    }\n  }\n\n  return (\n    <>\n      <h1 classname=\"text-center mb-4\"> BREADCRUMBS </h1>\n      <h6 classname=\"text-center mb-4\"> Stock, Index, & Currency tracker </h6>\n      <Card>\n        <Card.Body>\n          <h2 className=\"text-center mb-4\">Profile</h2>\n          {error && <Alert variant=\"danger\">{error}</Alert>}\n          <strong>Email:</strong> {currentUser.email}\n          <Link to=\"/update-profile\" className=\"btn btn-primary w-100 mt-3\">\n            Update Profile\n          </Link>\n        </Card.Body>\n      </Card>\n      <div className=\"w-100 text-center mt-2\">\n        <Button variant=\"link\" onClick={handleLogout}>\n          Log Out\n        </Button>\n      </div>\n\n      <div className=\"Dashboard\">\n        <div id=\"stock\">\n          <h1>Stock Tracker</h1>\n          <Stocks />\n        </div>\n        <div id=\"index\">\n          <h1>Index Tracker</h1>\n          <Indices />\n        </div>\n        <div id=\"currency\">\n          <h1>Currency Tracker</h1>\n          <Currencies />\n        </div>\n      </div>\n    </>\n  );\n}\n","import React, { useRef, useState } from \"react\";\nimport { Form, Button, Card, Alert } from \"react-bootstrap\";\nimport { useAuth } from \"../contexts/AuthContext\";\nimport { Link, useHistory } from \"react-router-dom\";\n\nexport default function Login() {\n  const emailRef = useRef();\n  const passwordRef = useRef();\n  const { login } = useAuth();\n  const [error, setError] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const history = useHistory();\n\n  async function handleSubmit(e) {\n    e.preventDefault();\n\n    try {\n      setError(\"\");\n      setLoading(true);\n      await login(emailRef.current.value, passwordRef.current.value);\n      history.push(\"/\");\n    } catch {\n      setError(\"Failed to log in\");\n    }\n\n    setLoading(false);\n  }\n\n  return (\n    <>\n      <h1 classname=\"text-center mb-4\"> BREADCRUMBS </h1>\n      <h6 classname=\"text-center mb-4\"> Stock, Index, & Currency tracker </h6>\n      <Card>\n        <Card.Body>\n          <h2 className=\"text-center mb-4\">Log In</h2>\n          {error && <Alert variant=\"danger\">{error}</Alert>}\n          <Form onSubmit={handleSubmit}>\n            <Form.Group id=\"email\">\n              <Form.Label>Email</Form.Label>\n              <Form.Control type=\"email\" ref={emailRef} required />\n            </Form.Group>\n            <Form.Group id=\"password\">\n              <Form.Label>Password</Form.Label>\n              <Form.Control type=\"password\" ref={passwordRef} required />\n            </Form.Group>\n            <Button disabled={loading} className=\"w-100\" type=\"submit\">\n              Log In\n            </Button>\n          </Form>\n          <div className=\"w-100 text-center mt-3\">\n            <Link to=\"/forgot-password\">Forgot Password?</Link>\n          </div>\n        </Card.Body>\n      </Card>\n      <div className=\"w-100 text-center mt-2\">\n        Need an account? <Link to=\"/signup\">Sign Up</Link>\n      </div>\n    </>\n  );\n}\n","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { useAuth } from \"../contexts/AuthContext\";\n\nexport default function PrivateRoute({ component: Component, ...rest }) {\n  const { currentUser } = useAuth();\n\n  return (\n    <Route\n      {...rest}\n      render={(props) => {\n        return currentUser ? (\n          <Component {...props} />\n        ) : (\n          <Redirect to=\"/login\" />\n        );\n      }}\n    ></Route>\n  );\n}\n","import React, { useRef, useState } from \"react\";\nimport { Form, Button, Card, Alert } from \"react-bootstrap\";\nimport { useAuth } from \"../contexts/AuthContext\";\nimport { Link } from \"react-router-dom\";\n\nexport default function ForgotPassword() {\n  const emailRef = useRef();\n  const { resetPassword } = useAuth();\n  const [error, setError] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n\n  async function handleSubmit(e) {\n    e.preventDefault();\n\n    try {\n      setMessage(\"\");\n      setError(\"\");\n      setLoading(true);\n      await resetPassword(emailRef.current.value);\n      setMessage(\"Check your inbox for further instructions\");\n    } catch {\n      setError(\"Failed to reset password\");\n    }\n\n    setLoading(false);\n  }\n\n  return (\n    <>\n      <Card>\n        <Card.Body>\n          <h2 className=\"text-center mb-4\">Password Reset</h2>\n          {error && <Alert variant=\"danger\">{error}</Alert>}\n          {message && <Alert variant=\"success\">{message}</Alert>}\n          <Form onSubmit={handleSubmit}>\n            <Form.Group id=\"email\">\n              <Form.Label>Email</Form.Label>\n              <Form.Control type=\"email\" ref={emailRef} required />\n            </Form.Group>\n            <Button disabled={loading} className=\"w-100\" type=\"submit\">\n              Reset Password\n            </Button>\n          </Form>\n          <div className=\"w-100 text-center mt-3\">\n            <Link to=\"/login\">Login</Link>\n          </div>\n        </Card.Body>\n      </Card>\n      <div className=\"w-100 text-center mt-2\">\n        Need an account? <Link to=\"/signup\">Sign Up</Link>\n      </div>\n    </>\n  );\n}\n","import React, { useRef, useState } from \"react\";\nimport { Form, Button, Card, Alert } from \"react-bootstrap\";\nimport { useAuth } from \"../contexts/AuthContext\";\nimport { Link, useHistory } from \"react-router-dom\";\n\nexport default function UpdateProfile() {\n  const emailRef = useRef();\n  const passwordRef = useRef();\n  const passwordConfirmRef = useRef();\n  const { currentUser, updatePassword, updateEmail } = useAuth();\n  const [error, setError] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const history = useHistory();\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    if (passwordRef.current.value !== passwordConfirmRef.current.value) {\n      return setError(\"Passwords do not match\");\n    }\n\n    const promises = [];\n    setLoading(true);\n    setError(\"\");\n\n    if (emailRef.current.value !== currentUser.email) {\n      promises.push(updateEmail(emailRef.current.value));\n    }\n    if (passwordRef.current.value) {\n      promises.push(updatePassword(passwordRef.current.value));\n    }\n\n    Promise.all(promises)\n      .then(() => {\n        history.push(\"/\");\n      })\n      .catch(() => {\n        setError(\"Failed to update account\");\n      })\n      .finally(() => {\n        setLoading(false);\n      });\n  }\n\n  return (\n    <>\n      <Card>\n        <Card.Body>\n          <h2 className=\"text-center mb-4\">Update Profile</h2>\n          {error && <Alert variant=\"danger\">{error}</Alert>}\n          <Form onSubmit={handleSubmit}>\n            <Form.Group id=\"email\">\n              <Form.Label>Email</Form.Label>\n              <Form.Control\n                type=\"email\"\n                ref={emailRef}\n                required\n                defaultValue={currentUser.email}\n              />\n            </Form.Group>\n            <Form.Group id=\"password\">\n              <Form.Label>Password</Form.Label>\n              <Form.Control\n                type=\"password\"\n                ref={passwordRef}\n                placeholder=\"Leave blank to keep the same\"\n              />\n            </Form.Group>\n            <Form.Group id=\"password-confirm\">\n              <Form.Label>Password Confirmation</Form.Label>\n              <Form.Control\n                type=\"password\"\n                ref={passwordConfirmRef}\n                placeholder=\"Leave blank to keep the same\"\n              />\n            </Form.Group>\n            <Button disabled={loading} className=\"w-100\" type=\"submit\">\n              Update\n            </Button>\n          </Form>\n        </Card.Body>\n      </Card>\n      <div className=\"w-100 text-center mt-2\">\n        <Link to=\"/\">Cancel</Link>\n      </div>\n    </>\n  );\n}\n","import React, { Component, Text } from \"react\";\nimport Demo from \"./screens/Demo\";\nimport Signup from \"./screens/Signup\";\nimport { Container } from \"react-bootstrap\";\nimport { AuthProvider } from \"./contexts/AuthContext\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Dashboard from \"./screens/Dashboard\";\nimport Login from \"./screens/Login\";\nimport PrivateRoute from \"./screens/PrivateRoute\";\nimport ForgotPassword from \"./screens/ForgotPassword\";\nimport UpdateProfile from \"./screens/UpdateProfile\";\n\nfunction App() {\n  return (\n    <Container\n      className=\"d-flex align-items-center justify-content-center\"\n      style={{ minHeight: \"100vh\" }}\n    >\n      <div className=\"w-100\" style={{ maxWidth: \"400px\" }}>\n        <Router>\n          <AuthProvider>\n            <Switch>\n              <PrivateRoute exact path=\"/\" component={Dashboard} />\n              <PrivateRoute path=\"/update-profile\" component={UpdateProfile} />\n              <Route path=\"/signup\" component={Signup} />\n              <Route path=\"/login\" component={Login} />\n              <Route path=\"/forgot-password\" component={ForgotPassword} />\n            </Switch>\n          </AuthProvider>\n        </Router>\n      </div>\n    </Container>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}